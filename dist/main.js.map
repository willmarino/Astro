{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/platform.js","webpack:///./src/environment.js","webpack:///./src/projectile.js","webpack:///./src/human.js","webpack:///./src/background.js","webpack:///./src/computer.js","webpack:///./src/score.js","webpack:///./src/index.js","webpack:///./src/game.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Platform","xStart","yStart","width","height","this","context","fillStyle","fillRect","x","y","Environment","dimensions","human","platforms","generatePlatforms","push","length","prevPlat","newYStart","generatePlatformYStart","generatePlatformGap","generatePlatformWidth","randHeight","prevPlatHeight","randomOffset","Math","round","random","draw","action","move","that","xPos","xVel","forEach","plat","shift","pop","newPlatWidth","nextPlat","unshift","Projectile","player","projectileXVel","projectileYVel","homing","owner","type","didHit","playerXVel","playerXPos","playerYPos","yPos","yVel","id","projectileCount","homingMove","homingDraw","playerYVel","Human","environment","computerProjectiles","CONSTANTS","GRAVITY","alive","projectiles","jumping","additionalScore","projectilesToDelete","curJumps","onFloor","curPlat","lastPlat","movingLeft","goingDown","bindLeft","bindRight","bindUndoRight","bindUndoLeft","bindJump","setClick","animate","filter","collidedWithProjectiles","applyGravity","applyYVelocity","getCurrentPlatform","isPlayerOnSide","movingRight","isInAir","Xvel","isOnFloor","window","addEventListener","e","moveLeft","moveRight","jump","down","canvas","rect","getBoundingClientRect","pos","clientX","left","clientY","top","configureProjectile","xDelta","yDelta","totalDeltasquared","pow","proportion","sqrt","obj1","obj2","obj1Diag","obj2Diag","values","collide","console","log","Background","Computer","JETPACK","humanProjectiles","canShoot","initiateShot","setInterval","shoot","playerPosX","playerPosY","newProj","randNum","randOffset","squaredDeltaX","squaredDeltaY","totalDelta","fetchHumanPosition","switchDirection","collidedWithFloor","hp","Score","initScore","score","font","fillText","game","getContext","running","computers","computersBeingAdded","numComputers","click","play","newCompStartX","setTimeout","comp","proj","projectile","addEnemyScore","filterComputers","sendEnemyProjectiles","background","setPlayerTracking","setNumComputers","spawnComputer","requestAnimationFrame","step","compStartX","run","document","getElementById","restart"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,SAIjBlC,EAAoBA,EAAoBmC,EAAI,G,uOChFhCC,E,WACnB,WAAYC,EAAQC,EAAQC,EAAOC,I,4FAAO,SACxCC,KAAKJ,OAASA,EACdI,KAAKH,OAASA,EACdG,KAAKF,MAAQA,EACbE,KAAKD,OAASA,E,oDAGXE,GACHA,EAAQC,UAAY,QACpBD,EAAQE,SAASH,KAAKJ,OAAQI,KAAKH,OAAQG,KAAKF,MAAOE,KAAKD,U,2BAGzDK,EAAGC,GACNL,KAAKJ,QAAUQ,EACfJ,KAAKH,QAAUQ,O,wSCfEC,E,WACnB,WAAYC,EAAYN,GAAoB,IAAXO,EAAW,uDAAL,KAAK,UAC1CR,KAAKO,WAAa,CAChBR,OAAQQ,EAAWR,OACnBD,MAAOS,EAAWT,OAEpBE,KAAKC,QAAUA,EAEfD,KAAKD,OAAS,IAEdC,KAAKS,UAAY,GACjBT,KAAKU,oBAELV,KAAKQ,MAAQA,E,mEAOb,IAHAR,KAAKS,UAAUE,KACb,IAAIhB,GAAU,KAAM,IAAK,IAAK,KAG9BK,KAAKS,UAAUT,KAAKS,UAAUG,OAAS,GAAGhB,OAC1CI,KAAKS,UAAUT,KAAKS,UAAUG,OAAS,GAAGd,MAAQ,KAAK,CACrD,IAAIe,EAAWb,KAAKS,UAAUT,KAAKS,UAAUG,OAAS,GAClDE,EAAYd,KAAKe,yBAClBD,EAAYD,EAAShB,OAAS,KAC/BiB,EAAYD,EAAShB,OAAS,IAEhCG,KAAKS,UAAUE,KACb,IAAIhB,EACFkB,EAASjB,OAASiB,EAASf,MAAQE,KAAKgB,sBACxCF,EACAd,KAAKiB,wBACL,Q,+CAMR,GAA6B,IAA1BjB,KAAKS,UAAUG,OAChB,OAAO,IAEP,IAEIM,EAFAC,EAAiBnB,KAAKS,UAAUT,KAAKS,UAAUG,OAAS,GAAGf,OAC3DuB,EAAeC,KAAKC,MAAsB,IAAhBD,KAAKE,UAYnC,OATEL,EADCG,KAAKE,SAAW,GACJJ,EAAiBC,EAEjBD,EAAiBC,GAEhB,IACdF,EAAa,IACNA,EAAa,MACpBA,EAAa,KAERA,I,8CAKT,IAAIE,EAAeC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGnC,OADcF,KAAKE,SACN,GACJ,IAAMH,EAEN,IAAMA,I,4CAKf,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,K,8BAUnCtB,GACND,KAAKwB,KAAKvB,GACVD,KAAKyB,W,+BAILzB,KAAK0B,S,6BAGD,WACAC,EAAO3B,KAUX,GATGA,KAAKQ,MAAMoB,MAAQ,KAAO5B,KAAKQ,MAAMqB,KAAO,EAC7C7B,KAAKS,UAAUqB,SAAQ,SAACC,GACtBA,EAAKL,MAAyB,EAApBC,EAAKnB,MAAMqB,KAAc,GAAI,MAElC7B,KAAKQ,MAAMoB,MAAQ,KAAO5B,KAAKQ,MAAMqB,KAAO,GACnD7B,KAAKS,UAAUqB,SAAQ,SAACC,GACtBA,EAAKL,MAAyB,EAApB,EAAKlB,MAAMqB,KAAc,GAAI,MAGxC7B,KAAKS,UAAU,GAAGb,QAAU,KAAK,CAClCI,KAAKS,UAAUuB,QACf,IAAInB,EAAWb,KAAKS,UAAUT,KAAKS,UAAUG,OAAS,GACtDZ,KAAKS,UAAUE,KACb,IAAIhB,EACFkB,EAASjB,OAASiB,EAASf,MAAQE,KAAKgB,sBACxChB,KAAKe,yBACLf,KAAKiB,wBACL,UAEA,GAAGjB,KAAKS,UAAUT,KAAKS,UAAUG,OAAS,GAAGhB,OAAS,KAAK,CAC/DI,KAAKS,UAAUwB,MACf,IAAIC,EAAelC,KAAKiB,wBACpBkB,EAAWnC,KAAKS,UAAU,GAC9BT,KAAKS,UAAU2B,QACb,IAAIzC,EACFwC,EAASvC,OAASI,KAAKgB,sBAAwBkB,EAC/ClC,KAAKe,yBACLmB,EACA,Q,2BAKHjC,GACHD,KAAKS,UAAUqB,SAAQ,SAACrC,GACtBA,EAAE+B,KAAKvB,W,wSC/HQoC,E,WAEnB,WAAYC,EAAQC,EAAgBC,GAA6B,IAAbC,EAAa,kEAE/DzC,KAAKyC,OAASA,EAEdzC,KAAK0C,MAAQJ,EAAOK,KACpB3C,KAAKC,QAAUqC,EAAOrC,QAEtBD,KAAK4C,QAAS,EAEd5C,KAAK6C,WAAaP,EAAOT,KACzB7B,KAAK8C,WAAaR,EAAOV,KACzB5B,KAAK+C,WAAaT,EAAOU,KAEzBhD,KAAK4B,KAAOU,EAAOV,KACnB5B,KAAKgD,KAAOV,EAAOU,KACnBhD,KAAK6B,KAAOU,EACZvC,KAAKiD,KAAOT,EACO,UAAhBF,EAAOK,MACR3C,KAAKF,MAAQ,EACbE,KAAKD,OAAS,GAEX0C,GACDzC,KAAKF,MAAQ,GACbE,KAAKD,OAAS,KAEdC,KAAKF,MAAQ,EACbE,KAAKD,OAAS,GAIlBC,KAAKkD,GAAKZ,EAAOa,gB,uDAGXlD,GAA8B,IAArB4B,EAAqB,uDAAhB,KAAMoB,EAAU,uDAAL,MACZ,IAAhBjD,KAAKyC,QACNzC,KAAKoD,WAAWvB,EAAMoB,GACtBjD,KAAKqD,WAAWpD,KAEhBD,KAAK0B,OACL1B,KAAKwB,KAAKvB,M,6BAKRD,KAAK8C,YAAc,KAAO9C,KAAK6C,YAAc,GAC/C7C,KAAK4B,MAAQ5B,KAAK6B,KAElB7B,KAAK4B,MAAS5B,KAAK6C,WAAa,EAChC7C,KAAKgD,MAAQhD,KAAKiD,MACRjD,KAAK8C,YAAc,KAAO9C,KAAK6C,YAAc,GACvD7C,KAAK4B,MAAQ5B,KAAK6B,KAClB7B,KAAK4B,MAAS5B,KAAK6C,WAAa,EAChC7C,KAAKgD,MAAQhD,KAAKiD,OAElBjD,KAAK4B,MAAQ5B,KAAK6B,KAClB7B,KAAKgD,MAAQhD,KAAKiD,Q,iCAMXJ,EAAYS,GAErBtD,KAAK4B,MAAQiB,EACb7C,KAAKgD,MAAQM,I,2BAIVrD,GACCD,KAAK4C,SACW,UAAf5C,KAAK0C,OACNzC,EAAQC,UAAY,QACpBD,EAAQE,SAASH,KAAK4B,KAAM5B,KAAKgD,KAAMhD,KAAKF,MAAOE,KAAKD,UAExDE,EAAQC,UAAY,QACpBD,EAAQE,SAASH,KAAK4B,KAAM5B,KAAKgD,KAAMhD,KAAKF,MAAOE,KAAKD,Y,iCAKnDE,GACJD,KAAK4C,SACR3C,EAAQC,UAAY,QACpBD,EAAQE,SAASH,KAAK4B,KAAM5B,KAAKgD,KAAMhD,KAAKF,MAAOE,KAAKD,c,8iCCrFzCwD,E,WACpB,WAAYC,EAAavD,EAASwD,I,4FAAoB,SACrDzD,KAAK2C,KAAO,QAEZ3C,KAAK0D,UAAY,CACbC,QAAS,IAGb3D,KAAK4D,OAAQ,EACb5D,KAAKwD,YAAcA,EACnBxD,KAAKC,QAAUA,EACfD,KAAKyD,oBAAsBA,EAC3BzD,KAAK6D,YAAc,GACnB7D,KAAK8D,SAAU,EACf9D,KAAKmD,gBAAkB,EAEvBnD,KAAK+D,gBAAkB,EAEvB/D,KAAKgE,oBAAsB,GAE3BhE,KAAKiE,SAAW,EAEdjE,KAAK4B,KAAO,IACZ5B,KAAKgD,KAAO,IACZhD,KAAKiD,KAAO,EACZjD,KAAK6B,KAAO,EACZ7B,KAAKF,MAAQ,GACfE,KAAKD,OAAS,GAEdC,KAAKkE,SAAU,EACflE,KAAKmE,QAAU,KACfnE,KAAKoE,SAAWpE,KAAKwD,YAAY/C,UAAU,GAE3CT,KAAKqE,YAAa,EAClBrE,KAAKsE,WAAY,EAEjBtE,KAAKuE,WACLvE,KAAKwE,YACLxE,KAAKyE,gBACLzE,KAAK0E,eAEH1E,KAAK2E,WACL3E,KAAK4E,SAAW5E,KAAK4E,SAASzF,KAAKa,MACnCA,KAAK4E,SAAS5E,M,uDAUTC,GACPD,KAAK0B,OACL1B,KAAKwB,KAAKvB,GACND,KAAK6D,YAAYjD,OAAS,GAC7BZ,KAAK6D,YAAY/B,SAAQ,SAACrC,GACzBA,EAAEoF,QAAQ5E,MAGZD,KAAK6D,YAAc7D,KAAK6D,YAAYiB,QAAO,SAAArF,GAAC,OAAIA,EAAEmC,KAAO,MAAQnC,EAAEmC,MAAQ,IAAMnC,EAAEuD,MAAQ,IAAMvD,EAAEuD,KAAM,OACzGhD,KAAK+E,4B,2BAGD9E,GACJA,EAAQC,UAAY,OACpBD,EAAQE,SACPH,KAAK4B,KAAM5B,KAAKgD,KAAMhD,KAAKF,MAAOE,KAAKD,U,6BAMxC,IAAIC,KAAK4D,MAKR,OAFA5D,KAAKgF,oBACLhF,KAAKiF,iBAeN,GAXAjF,KAAKkF,qBAEFlF,KAAKmE,QACJnE,KAAKiD,KAAO,GAAKjD,KAAKgD,MAAQhD,KAAKmE,QAAQtE,OAAS,IAAMG,KAAKoE,SAASvE,UAC1EG,KAAK8D,SAAU,GAEP9D,KAAKmE,UACdnE,KAAKkE,SAAU,GAEhBlE,KAAKkF,qBAEFlF,KAAKkE,UAAYlE,KAAK8D,QACxB9D,KAAKiE,SAAW,EAChBjE,KAAKgD,KAAOhD,KAAKmE,QAAQtE,OAASG,KAAKD,OACvCC,KAAKiD,KAAO,EACZjD,KAAKmF,sBACA,GAAInF,KAAKkE,QAWNlE,KAAKkE,SAAWlE,KAAK8D,UAC7B9D,KAAKgD,MAAQhD,KAAKiD,KAClBjD,KAAKmF,sBAbiB,CACtB,GAAGnF,KAAKmE,SACJnE,KAAKgD,MAAQhD,KAAKmE,QAAQtE,OAASG,KAAKD,QAAUC,KAAKiD,MAAQ,EAGjE,OAFAjD,KAAKkE,SAAU,OACflE,KAAKmF,iBAIPnF,KAAKiD,MAAQjD,KAAK0D,UAAUC,QAC5B3D,KAAKgD,MAAQhD,KAAKiD,KAClBjD,KAAKmF,iBAKFnF,KAAKqE,YAAerE,KAAKoF,cACzBpF,KAAK6B,KAAO,EACd7B,KAAK6B,MAAQ,GACL7B,KAAK6B,KAAO,IACpB7B,KAAK6B,MAAQ,O,8BAOX7B,KAAK4D,QACR5D,KAAKgF,eACLhF,KAAKgD,MAAQhD,KAAKiD,MAEnBjD,KAAKkF,qBACFlF,KAAKqF,YACPrF,KAAKgF,eACLhF,KAAKgD,MAAQhD,KAAKiD,KAClBjD,KAAK4B,MAAQ5B,KAAKsF,MAEhBtF,KAAKuF,cAEPvF,KAAKiD,KAAO,EACZjD,KAAK4B,MAAQ5B,KAAK6B,Q,uCAQd7B,KAAK4B,MAAQ,KAAO5B,KAAK6B,MAAQ,GAAO7B,KAAK4B,MAAQ,KAAO5B,KAAK6B,MAAQ,IAG7E7B,KAAK4B,MAAQ5B,KAAK6B,Q,qCAYnB7B,KAAKiD,MAAQjD,KAAK0D,UAAUC,U,gCAI5B,OAAI3D,KAAKmE,SAGNnE,KAAKgD,KAAQhD,KAAKmE,QAAQtE,OAASG,KAAKD,S,kCAO3C,QAAIC,KAAKmE,SAGNnE,KAAKgD,KAAQhD,KAAKmE,QAAQtE,OAASG,KAAKmE,QAAQpE,QAC/CC,KAAKgD,KAAQhD,KAAKmE,QAAQtE,OAAS,I,0CAiBnCG,KAAKmE,SACJnE,KAAKgD,MAAQhD,KAAKmE,QAAQtE,OAAS,KACtCG,KAAKkE,SAAU,K,2CAQjB,IADA,IACSvG,EAAI,EAAGA,EAAIqC,KAAKwD,YAAY/C,UAAUG,OAAQjD,IAAK,CAC3D,IAAIoE,EAFM/B,KAEMwD,YAAY/C,UAAU9C,GACtC,GAHUqC,KAGD4B,KAAOG,EAAKnC,QAHXI,KAG0B4B,KAAOG,EAAKnC,OAASmC,EAAKjC,OAHpDE,KAGkEgD,KAAOjB,EAAKlC,OAASkC,EAAKhC,OAAQ,CAHpGC,KAKJmE,QAAUpC,EALN/B,KAMJoE,SANIpE,KAMYmE,QACrB,MAPSnE,KAUJmE,QAAU,Q,iCAcP,WACVqB,OAAOC,iBAAiB,YAAY,SAACC,GACtB,MAAVA,EAAExG,MACL,EAAKyG,WACL,EAAKtB,YAAa,Q,qCAKP,WACbmB,OAAOC,iBAAiB,SAAS,SAACC,GACnB,MAAVA,EAAExG,MAEL,EAAKmF,YAAa,Q,kCAKV,WACVmB,OAAOC,iBAAiB,YAAY,SAACC,GACtB,MAAVA,EAAExG,MACL,EAAK0G,YACL,EAAKR,aAAc,Q,sCAKP,WACdI,OAAOC,iBAAiB,SAAS,SAACC,GACnB,MAAVA,EAAExG,MAEL,EAAKkG,aAAc,Q,iCAKX,WACVI,OAAOC,iBAAiB,YAAY,SAACC,GACtB,MAAVA,EAAExG,KACL,EAAK2G,Y,iCAKE,WACTL,OAAOC,iBAAiB,YAAY,SAACC,GACvB,MAAVA,EAAExG,MACJ,EAAKoF,WAAY,EACjB,EAAKwB,a,qCAKM,WACbN,OAAOC,iBAAiB,SAAS,SAACC,GACnB,MAAVA,EAAExG,MAEL,EAAKoF,WAAY,Q,+BAcX3C,GAAM,WACd3B,KAAKC,QAAQ8F,OAAON,iBAAiB,SAAS,SAACC,GAC9C,IAAIM,EAAO,EAAK/F,QAAQ8F,OAAOE,wBAC3BC,EAAM,GACVA,EAAI9F,EAAIsF,EAAES,QAAUH,EAAKI,KACzBF,EAAI7F,EAAIqF,EAAEW,QAAUL,EAAKM,IAEzB3E,EAAKkC,YAAYlD,KAAjB,EAA0B0B,EAA1B,CACCV,GADD,SAEIA,EAAK4E,oBAAoBL,OAG7B,EAAK/C,iBAAmB,O,0CAIN+C,GACnB,IAAIM,EAASN,EAAI9F,EAAIJ,KAAK4B,KACtB6E,EAASP,EAAI7F,EAAIL,KAAKgD,KAItB0D,EAFgBrF,KAAKsF,IAAIH,EAAQ,GACjBnF,KAAKsF,IAAIF,EAAQ,GAIjCG,EAAa,GAFAvF,KAAKwF,KAAKH,GAM3B,MAAO,CAHIF,EAASI,EACTH,EAASG,K,6BAajB5G,KAAKiE,SAAW,IAClBjE,KAAKkE,SAAU,EACflE,KAAK8D,SAAU,EACf9D,KAAKiD,MAAQ,GACbjD,KAAKiE,UAAY,K,kCAKlBjE,KAAK6B,KAAO,I,iCAIZ7B,KAAK6B,MAAQ,I,8BAIS,IAAnB7B,KAAKsE,YACPtE,KAAKiD,MAAQ,K,8BAYP6D,EAAMC,GAMKD,EAAKlF,KAAQkF,EAAKlF,KAAK9B,MACvBgH,EAAK9D,KAAQ8D,EAAK9D,KAAKlD,MADzC,IAIIkH,EAAW3F,KAAKwF,KAAKxF,KAAKsF,IAAIG,EAAKhH,MAAQ,EAAG,GAAKuB,KAAKsF,IAAIG,EAAK/G,OAAS,EAAG,IAAM,EAOnFkH,EAAW5F,KAAKwF,KAAKxF,KAAKsF,IAAII,EAAKjH,MAAQ,EAAG,GAAKuB,KAAKsF,IAAII,EAAKhH,OAAS,EAAG,IAAM,EAsBvF,OArBkBgH,EAAKnF,KAAQmF,EAAKnF,KAAK9B,MACvBiH,EAAK/D,KAAQ+D,EAAK/D,KAAKlD,MAoBrCkH,EAAWC,EAAW,GAlBT5F,KAAKwF,KAAKxF,KAAKsF,IAAIG,EAAKlF,KAAOmF,EAAKnF,KAAM,GAAKP,KAAKsF,IAAIG,EAAK9D,KAAO+D,EAAK/D,KAAM,M,gDA2BhG,IAAIrB,EAAO3B,KACX3B,OAAO6I,OAAOlH,KAAKyD,qBAAqB3B,SAAQ,SAACrC,GAC5CkC,EAAKwF,QAAQxF,EAAMlC,KACtBA,EAAEmD,QAAS,EACXwE,QAAQC,IAAI,QACZ1F,EAAKiC,OAAQ,W,wSCtaI0D,E,WACnB,WAAY/G,GAAoB,IAARe,EAAQ,uDAAF,EAAE,UAC9BtB,KAAKO,WAAaA,EAClBP,KAAKsB,MAAQA,E,oDAGVrB,GACHA,EAAQC,UAAY,UACpBD,EAAQE,SAAS,EAAG,EAAGH,KAAKO,WAAWT,MAAOE,KAAKO,WAAWR,U,8BAGxDE,GACND,KAAKwB,KAAKvB,Q,4oCCZOsH,E,WACnB,WAAY/D,EAAavD,EAASO,GAAgB,IAAToB,EAAS,uDAAJ,IAAI,UAChD5B,KAAK2C,KAAO,WAEd3C,KAAK0D,UAAY,CACbC,QAAS,GACT6D,QAAS,IAGXxH,KAAK4D,OAAQ,EACf5D,KAAKwD,YAAcA,EACjBxD,KAAKC,QAAUA,EACfD,KAAK6D,YAAc,GACnB7D,KAAKyH,iBAAmBjH,EAAMqD,YAE9B7D,KAAK+D,gBAAkB,EAEvB/D,KAAKmD,gBAAkB,IACvBnD,KAAKgE,oBAAsB,GAE7BhE,KAAK4B,KAAOA,EACV5B,KAAKgD,KAAO,GACdhD,KAAKiD,KAAO,EACZjD,KAAK6B,MAAQ,EACb7B,KAAKF,MAAQ,GACXE,KAAKD,OAAS,GAEdC,KAAKQ,MAAQA,EAEbR,KAAK0H,UAAW,EAChB1H,KAAK2H,e,8DAMO,WACZnC,OAAOoC,aAAY,WACjB,EAAKC,UACJ,O,wCAIA7H,KAAK4B,MAAQ,GACd5B,KAAK6B,KAAO,EACL7B,KAAK4B,MAAQ,OACpB5B,KAAK6B,MAAQ,K,2CAKf7B,KAAK8H,WAAa9H,KAAKQ,MAAMoB,KAC7B5B,KAAK+H,WAAa/H,KAAKQ,MAAMwC,O,8BAI7B,IAIIgF,EAJA9B,EAAM,GACVA,EAAI9F,EAAIJ,KAAK8H,WACb5B,EAAI7F,EAAIL,KAAK+H,WAIC1G,KAAKC,MAAsB,GAAhBD,KAAKE,UAE5ByG,EAAU,EACJ3F,EADC,CAEHrC,MAFG,SAGAA,KAAKuG,oBAAoBL,MAalClG,KAAK6D,YAAYmE,EAAQ9E,IAAM8E,EAC/BhI,KAAKmD,iBAAmB,I,0CAGP+C,GAAkB,IAAbzD,EAAa,wDAC/BwF,EAAU5G,KAAKE,SAEfiF,EAASN,EAAI9F,EAAIJ,KAAK4B,KACtB6E,EAASP,EAAI7F,EAAIL,KAAKgD,KAE1B,IAAc,IAAXP,EAAiB,CAClB,IAAIyF,EAAa7G,KAAKC,MAAsB,IAAhBD,KAAKE,UAC9B0G,EAAU,IACXzB,GAAU0B,EACHD,EAAU,KAAQA,EAAU,KACnCzB,GAAU0B,GAId,IAAIC,EAAgB9G,KAAKsF,IAAIH,EAAQ,GACjC4B,EAAgB/G,KAAKsF,IAAIF,EAAQ,GACjCC,EAAoByB,EAAgBC,EACpCC,EAAahH,KAAKwF,KAAKH,GAEvBE,EAAa,EAAIyB,EACjBxG,EAAO2E,EAASI,EAChB3D,EAAOwD,EAASG,EAEpB,MAAO,CAAC/E,EAAMoB,K,6BAOdjD,KAAKiD,MAAQ,I,kCAIbjD,KAAK6B,MAAQ,EACV7B,KAAK6B,KAAO,IACb7B,KAAK6B,KAAO,K,iCAKd7B,KAAK6B,MAAQ,EACT7B,KAAK6B,MAAQ,IACf7B,KAAK6B,MAAQ,K,2BAKb5B,GACFA,EAAQC,UAAY,MACpBD,EAAQE,SACNH,KAAK4B,KAAM5B,KAAKgD,KAAMhD,KAAKF,MAAOE,KAAKD,U,+BAKzCC,KAAK0B,OACL1B,KAAKsI,qBACFtI,KAAK4D,QACN5D,KAAKuI,kBACLvI,KAAK+E,6B,6BAKH/E,KAAK4D,OAIP5D,KAAKgD,MAAQhD,KAAKiD,KAClBjD,KAAK4B,MAAQ5B,KAAK6B,MACc,IAA7B7B,KAAKwI,sBACNxI,KAAKiD,MAAQjD,KAAK0D,UAAUC,QAC5B3D,KAAKiD,MAAQjD,KAAK0D,UAAU8D,SAE3BxH,KAAK6B,KAAO,GAAK7B,KAAKwI,oBACvBxI,KAAK6B,MAAQ,GACJ7B,KAAK6B,KAAO,GAAK7B,KAAKwI,sBAC/BxI,KAAK6B,MAAQ,MAZf7B,KAAKiD,MAAQjD,KAAK0D,UAAUC,QAC5B3D,KAAKgD,MAAQhD,KAAKiD,MAcjBjD,KAAKQ,MAAMoB,MAAQ,IACjB5B,KAAK6B,MAAQ,IACd7B,KAAK4B,MAAQ,GAER5B,KAAKQ,MAAMoB,MAAQ,KACtB5B,KAAKQ,MAAMoB,MAAQ,MACrB5B,KAAK4B,MAAQ,K,8BAKX3B,GAAQ,WACdD,KAAKyB,SACLzB,KAAKwB,KAAKvB,GACP5B,OAAO6I,OAAOlH,KAAK6D,aAAajD,OAAS,GAC1CvC,OAAO6I,OAAOlH,KAAK6D,aAAa/B,SAAQ,SAACrC,GACvC,IAAgB,IAAbA,EAAEgD,OAAgB,CACnB,IAAIyD,EAAM,CAAC9F,EAAG,EAAKI,MAAMoB,KAAMvB,EAAG,EAAKG,MAAMwC,MAC7CvD,EAAEoF,QAAF,MAAApF,EAAC,CAASQ,GAAT,SAAqB,EAAKsG,oBAAoBL,GAAK,WAEpDzG,EAAEoF,QAAQ5E,MAKhB5B,OAAO6I,OAAOlH,KAAK6D,aAAa/B,SAAQ,SAACrC,IACjC,SAAAA,GAAC,OAAIA,EAAEmC,KAAO,MAAQnC,EAAEmC,MAAQ,IAAMnC,EAAEuD,MAAQ,IAAMvD,EAAEuD,KAAO,cAC5D,EAAKa,YAAYpE,EAAEyD,S,0CAM9B,GAAGlD,KAAKgD,MAAQhD,KAAKwD,YAAYzD,OAAS,GAExC,OADAC,KAAKiD,KAAO,GACL,I,8BAIH6D,EAAMC,GA+BZ,OAzBe1F,KAAKwF,KAAKxF,KAAKsF,IAAIG,EAAKhH,MAAQ,EAAG,GAAKuB,KAAKsF,IAAIG,EAAK/G,OAAS,EAAG,IAAM,EAOxEsB,KAAKwF,KAAKxF,KAAKsF,IAAII,EAAKjH,MAAQ,EAAG,GAAKuB,KAAKsF,IAAII,EAAKhH,OAAS,EAAG,IAAM,EAkB9D,GAhBRsB,KAAKwF,KAAKxF,KAAKsF,IAAIG,EAAKlF,KAAOmF,EAAKnF,KAAM,GAAKP,KAAKsF,IAAIG,EAAK9D,KAAO+D,EAAK/D,KAAM,M,gDAwBzE,WACvBhD,KAAKQ,MAAMqD,YAAY/B,SAAQ,SAAC2G,GAC9B,GAAG,EAAKtB,QAAQ,EAAMsB,GAMpB,OALA,EAAKzE,oBAAoBrD,KAAK8H,GAC9BrB,QAAQC,IAAI,QACZoB,EAAG7F,QAAS,EACZ,EAAKgB,OAAQ,EACb,EAAKG,iBAAmB,GACjB,U,wSC5PM2E,E,WACnB,WAAYzI,GAAqB,IAAZ0I,EAAY,uDAAF,EAAE,UAC/B3I,KAAK4B,KAAO,KACZ5B,KAAKgD,KAAO,IACZhD,KAAK4I,MAAQD,EAEb3I,KAAKC,QAAUA,E,yDAIfD,KAAKwB,S,6BAILxB,KAAKC,QAAQ4I,KAAO,aACpB7I,KAAKC,QAAQ6I,SAAS9I,KAAK4I,MAAO5I,KAAK4B,KAAM5B,KAAKgD,W,0MCZhD+F,EAAO,I,WCGX,WAAYhD,I,4FAAO,SACjB/F,KAAKC,QAAU8F,EAAOiD,WAAW,MACjChJ,KAAKO,WAAa,CAChBR,OAAQgG,EAAOhG,OACfD,MAAOiG,EAAOjG,OAEhBE,KAAKiJ,SAAU,EAEfjJ,KAAKkJ,UAAY,GACjBlJ,KAAKmJ,oBAAsB,EAC3BnJ,KAAKoJ,aAAepJ,KAAKkJ,UAAUtI,OAASZ,KAAKmJ,oBAEjDnJ,KAAKyH,iBAAmB,GACxBzH,KAAKyD,oBAAsB,G,iEAa3BzD,KAAKkJ,UAAYlJ,KAAKkJ,UAAUpE,QAAO,SAAA9G,GAAC,OAAIA,EAAEgF,KAAO,S,4BAGlD,WACHhD,KAAKC,QAAQ8F,OAAON,iBAAiB,aAAa,WAChD,EAAK4D,a,8BAKHrJ,KAAKiJ,SACPjJ,KAAKsJ,S,wCAYPtJ,KAAKoJ,aAAepJ,KAAKkJ,UAAUtI,OAASZ,KAAKmJ,sB,sCAGpC,IAETI,EAFS,OACbvJ,KAAKmJ,qBAAuB,EAE5B,IAAIlB,EAAU5G,KAAKE,SAEjBgI,EADCtB,GAAW,GACI,MAEC,GAEnBzC,OAAOgE,YAAW,WAChB,EAAKN,UAAUvI,KACb,IAAI4G,EAAS,EAAK/D,YAAa,EAAKvD,QAAS,EAAKO,MAAO+I,IAE3D,EAAKJ,qBAAuB,IAC3B,O,0CAGc,WACjBnJ,KAAKkJ,UAAUpH,SAAQ,SAAC2H,GACtBpL,OAAO6I,OAAOuC,EAAK5F,aAAa/B,SAAQ,SAAC4H,GACvCA,EAAK7G,WAAa,EAAKrC,MAAMqB,KAC7B6H,EAAK5G,WAAa,EAAKtC,MAAMoB,KAC7B8H,EAAK3G,WAAa,EAAKvC,MAAMwC,a,6CAKb,WACpBhD,KAAKkJ,UAAUpH,SAAQ,SAAC2H,GACtBpL,OAAO6I,OAAOuC,EAAK5F,aAAa/B,SAAQ,SAAC6H,GACvC,EAAKnJ,MAAMiD,oBAAoBkG,EAAWzG,IAAMyG,U,sCAapD,IAAIhI,EAAO3B,KACXA,KAAKkJ,UAAUpH,SAAQ,SAAC2H,GACtB9H,EAAKiH,MAAMA,OAASa,EAAK1F,gBACzB0F,EAAK1F,gBAAkB,O,6BAKzB/D,KAAK6E,UACL7E,KAAK4J,kB,gCAIE,WAEP5J,KAAK6J,kBACL7J,KAAK8J,uBAEL9J,KAAK+J,WAAWlF,QAAQ7E,KAAKC,SAC7BD,KAAKwD,YAAYqB,QAAQ7E,KAAKC,SAC9BD,KAAKQ,MAAMqE,QAAQ7E,KAAKC,SACxBD,KAAK4I,MAAM/D,UAEX7E,KAAKgK,oBAELhK,KAAKkJ,UAAUpH,SAAQ,SAAC9D,GACtBA,EAAE6G,QAAQ,EAAK5E,YAGjBD,KAAKiK,kBAEFjK,KAAKoJ,aAAe,GACrBpJ,KAAKkK,gBAGJlK,KAAKiJ,SACNzD,OAAO2E,sBAAsBnK,KAAKoK,KAAKjL,KAAKa,S,6BAY9CA,KAAKiJ,SAAU,EACfjJ,KAAK6J,kBAEL7J,KAAKoK,S,gCAILpK,KAAK+J,WAAa,IAAIzC,EAAWtH,KAAKO,YACtCP,KAAKwD,YAAc,IAAIlD,EAAYN,KAAKO,WAAYP,KAAKC,SACzDD,KAAKQ,MAAQ,IAAI+C,EAAMvD,KAAKwD,YAAaxD,KAAKC,QAASD,KAAKyD,qBAC5DzD,KAAK4I,MAAQ,IAAIF,EAAM1I,KAAKC,SAC5BD,KAAKwD,YAAYhD,MAAQR,KAAKQ,MAG9B,IAFA,IACI6J,EADA1M,EAAI,EAEFA,EAAI,GAEN0M,EADC1M,EAAI,GAAM,EACE,KAAQ,IAAMA,GAEb,GAAM,IAAMA,EAE5BqC,KAAKkJ,UAAUvI,KAAK,IAAI4G,EAASvH,KAAKwD,YAAaxD,KAAKC,QAASD,KAAKQ,MAAO6J,IAC7E1M,GAAK,EAEPqC,KAAKiJ,SAAU,EACfjJ,KAAKoK,OACLpK,KAAKsK,W,gCD3KI,CADEC,SAASC,eAAe,gBAGvCD,SAAS9E,iBAAiB,oBAAoB,WAC5CsD,EAAK0B","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\n\nexport default class Platform{\n  constructor(xStart, yStart, width, height){\n    this.xStart = xStart;\n    this.yStart = yStart;\n    this.width = width;\n    this.height = height;\n  }\n\n  draw(context) {\n    context.fillStyle = 'black';\n    context.fillRect(this.xStart, this.yStart, this.width, this.height);\n  }\n\n  move(x, y){\n    this.xStart += x;\n    this.yStart += y;\n  }\n\n}","import Platform from \"./platform\";\n\nexport default class Environment{\n  constructor(dimensions, context, human=null){\n    this.dimensions = {\n      height: dimensions.height,\n      width: dimensions.width\n    };\n    this.context = context;\n\n    this.height = 300;\n\n    this.platforms = [];\n    this.generatePlatforms();\n\n    this.human = human;\n  }\n\n  generatePlatforms(){\n    this.platforms.push(\n      new Platform(-1360, 550, 600, 15)\n    );\n    while(\n      this.platforms[this.platforms.length - 1].xStart +\n      this.platforms[this.platforms.length - 1].width < 2000){\n        let prevPlat = this.platforms[this.platforms.length - 1];\n        let newYStart = this.generatePlatformYStart();\n        if(newYStart - prevPlat.yStart > 50){\n          newYStart = prevPlat.yStart + 50;\n        }\n        this.platforms.push(\n          new Platform(\n            prevPlat.xStart + prevPlat.width + this.generatePlatformGap(),\n            newYStart,\n            this.generatePlatformWidth(),\n            15\n          ));\n      }\n  }\n\n  generatePlatformYStart(){\n    if(this.platforms.length === 0){\n      return 550;\n    }else{\n      let prevPlatHeight = this.platforms[this.platforms.length - 1].yStart;\n      let randomOffset = Math.round(Math.random() * 200);\n      let randHeight;\n      if(Math.random() < 0.5){\n        randHeight = prevPlatHeight + randomOffset;\n      }else{\n        randHeight = prevPlatHeight - randomOffset;\n      }\n      if(randHeight < 350){\n        randHeight = 350;\n      }else if(randHeight > 625){\n        randHeight = 625;\n      }\n      return randHeight;\n    }\n  }\n\n  generatePlatformWidth(){\n    let randomOffset = Math.round(Math.random() * 200);\n    // let randomNegOffset = Math.round(Math.random() * (200 * (-1)));\n    let randNum = Math.random();\n    if(randNum < .5){\n      return 400 + randomOffset;\n    }else{\n      return 400 - randomOffset;\n    }\n  }\n\n  generatePlatformGap(){\n    return Math.round(Math.random() * 100) + 15;\n  }\n\n  // --------------------------------------------------------------------------\n  // --------------------------------------------------------------------------\n  // --------------------------------------------------------------------------\n  // --------------------------------------------------------------------------\n  // --------------------------------------------------------------------------\n  // --------------------------------------------------------------------------\n\n  animate(context){\n    this.draw(context);\n    this.action();\n  }\n\n  action(){\n    this.move();\n  }\n\n  move(){\n    let that = this;\n    if(this.human.xPos >= 800 && this.human.xVel > 0){\n      this.platforms.forEach((plat) => {\n        plat.move(that.human.xVel * (-1) - .1, 0);\n      });\n    }else if(this.human.xPos <= 300 && this.human.xVel < 0){\n      this.platforms.forEach((plat) => {\n        plat.move(this.human.xVel * (-1) + .1, 0);\n      });\n    }\n    if(this.platforms[0].xStart < -1450){\n      this.platforms.shift();\n      let prevPlat = this.platforms[this.platforms.length - 1];\n      this.platforms.push(\n        new Platform(\n          prevPlat.xStart + prevPlat.width + this.generatePlatformGap(),\n          this.generatePlatformYStart(),\n          this.generatePlatformWidth(),\n          15\n        ));\n    }else if(this.platforms[this.platforms.length - 1].xStart > 1300){\n      this.platforms.pop();\n      let newPlatWidth = this.generatePlatformWidth();\n      let nextPlat = this.platforms[0];\n      this.platforms.unshift(\n        new Platform(\n          nextPlat.xStart - this.generatePlatformGap() - newPlatWidth,\n          this.generatePlatformYStart(),\n          newPlatWidth,\n          15\n        ));\n    }\n  }\n\n  draw(context){\n    this.platforms.forEach((p) => {\n      p.draw(context);\n    });\n    \n    \n\n  }\n\n}","\n\nexport default class Projectile{\n  // constructor(id, playerXVel, playerPos, context, xVel, yVel){\n  constructor(player, projectileXVel, projectileYVel, homing=false){\n\n    this.homing = homing;\n\n    this.owner = player.type;\n    this.context = player.context;\n\n    this.didHit = false;\n\n    this.playerXVel = player.xVel;\n    this.playerXPos = player.xPos;\n    this.playerYPos = player.yPos;\n\n    this.xPos = player.xPos;\n    this.yPos = player.yPos;\n    this.xVel = projectileXVel;\n    this.yVel = projectileYVel;\n    if(player.type === 'human'){\n      this.width = 5;\n      this.height = 5;\n    }else{\n      if(homing){\n        this.width = 20;\n        this.height = 20;  \n      }else{\n        this.width = 5;\n        this.height = 5;\n      }\n    }\n\n    this.id = player.projectileCount;\n  }\n  \n  animate(context, xVel=null, yVel=null){\n    if(this.homing === true){\n      this.homingMove(xVel, yVel);\n      this.homingDraw(context);\n    }else{\n      this.move();\n      this.draw(context);\n    }\n  }\n  \n  move(){\n    if((this.playerXPos >= 800 && this.playerXVel >= 0)){\n      this.xPos += this.xVel;\n      // this.xPos -= this.playerXVel;\n      this.xPos -= (this.playerXVel / 2);\n      this.yPos += this.yVel;\n    } else if ((this.playerXPos <= 300 && this.playerXVel <= 0)){\n      this.xPos += this.xVel;\n      this.xPos -= (this.playerXVel / 2);\n      this.yPos += this.yVel;\n    }else{\n      this.xPos += this.xVel;\n      this.yPos += this.yVel;\n    }\n    // this.xPos += this.xVel;\n    // this.yPos += this.yVel;\n  }\n\n  homingMove(playerXVel, playerYVel){\n    // ------------------------------------------------------------------------------------\n    this.xPos += playerXVel;\n    this.yPos += playerYVel;\n  }\n\n\n  draw(context){\n    if(!this.didHit){\n      if(this.owner === 'human'){\n        context.fillStyle = 'black';\n        context.fillRect(this.xPos, this.yPos, this.width, this.height);  \n      }else{\n        context.fillStyle = 'white';\n        context.fillRect(this.xPos, this.yPos, this.width, this.height);\n      }\n    }\n  }\n\n  homingDraw(context) {\n    if (!this.didHit) {\n      context.fillStyle = 'green';\n      context.fillRect(this.xPos, this.yPos, this.width, this.height);\n    }\n  }\n\n}","import Projectile from \"./projectile\";\n\nexport default class Human{\n\tconstructor(environment, context, computerProjectiles){\n\t\tthis.type = 'human';\n\n\t\tthis.CONSTANTS = {\n      GRAVITY: 0.5\n\t\t};\n\n\t\tthis.alive = true;\n\t\tthis.environment = environment;\n\t\tthis.context = context;\n\t\tthis.computerProjectiles = computerProjectiles;\n\t\tthis.projectiles = [];\n\t\tthis.jumping = false;\n\t\tthis.projectileCount = 0;\n\n\t\tthis.additionalScore = 0;\n\n\t\tthis.projectilesToDelete = [];\n\n\t\tthis.curJumps = 0;\n\n    this.xPos = 350;\n    this.yPos = 100;\n    this.yVel = 0;\n    this.xVel = 0;\n    this.width = 15;\n\t\tthis.height = 15;\n\t\t\n\t\tthis.onFloor = false;\n\t\tthis.curPlat = null;\n\t\tthis.lastPlat = this.environment.platforms[0];\n\n\t\tthis.movingLeft = true;\n\t\tthis.goingDown = false;\n\n\t\tthis.bindLeft();\n\t\tthis.bindRight();\n\t\tthis.bindUndoRight();\n\t\tthis.bindUndoLeft();\n\n    this.bindJump();\n    this.setClick = this.setClick.bind(this);\n    this.setClick(this);\n\t}\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------MAIN---------------------------------------------------\n\t// ----------------------------------MAIN--------------------------------------------------------------\n\t// ----------------------------------MAIN--------------------------------------------------------------\n\t// ----------------------------------MAIN--------------------------------------------------------------\n\t// ----------------------------------MAIN--------------------------------------------------------------\n\t// ----------------------------------MAIN--------------------------------------------------------------\n\n\tanimate(context) {\n\t\tthis.move();\n\t\tthis.draw(context);\n\t\tif (this.projectiles.length > 0) {\n\t\t\tthis.projectiles.forEach((p) => {\n\t\t\t\tp.animate(context);\n\t\t\t});\n\t\t}\n\t\tthis.projectiles = this.projectiles.filter(p => p.xPos < 1110 && p.xPos > -10 && p.yPos > -10 && p.yPos <710);\n\t\tthis.collidedWithProjectiles();\n\t}\n\n\tdraw(context) {\n\t\tcontext.fillStyle = 'gray';\n\t\tcontext.fillRect(\n\t\t\tthis.xPos, this.yPos, this.width, this.height\n\t\t);\n\t}\n\n\tmove(){\n\n\t\tif(!this.alive){\n\t\t\t// this.yVel += this.CONSTANTS.GRAVITY;\n\t\t\t// this.yPos += this.yVel;\n\t\t\tthis.applyGravity();\n\t\t\tthis.applyYVelocity();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.getCurrentPlatform();\n\n\t\tif(this.curPlat){\n\t\t\tif(this.yVel > 0 && this.yPos < (this.curPlat.yStart - 20 || this.lastPlat.yStart) ){//I should be able to delete this\n\t\t\t\tthis.jumping = false;\n\t\t\t}\n\t\t}else if(!this.curPlat){\n\t\t\tthis.onFloor = false;\n\t\t}\n\t\tthis.getCurrentPlatform();\n\n\t\tif(this.onFloor && !this.jumping){\n\t\t\tthis.curJumps = 0;\n\t\t\tthis.yPos = this.curPlat.yStart - this.height;\n\t\t\tthis.yVel = 0;\n\t\t\tthis.isPlayerOnSide();\n\t\t}else if(!this.onFloor){\n\t\t\tif(this.curPlat){\n\t\t\t\tif(this.yPos >= this.curPlat.yStart - this.height && this.yVel >= 0){\n\t\t\t\t\tthis.onFloor = true;\n\t\t\t\t\tthis.isPlayerOnSide();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.yVel += this.CONSTANTS.GRAVITY;\n\t\t\tthis.yPos += this.yVel;\n\t\t\tthis.isPlayerOnSide();\n\t\t}else if(this.onFloor && this.jumping){\n\t\t\tthis.yPos += this.yVel;\n\t\t\tthis.isPlayerOnSide();\n\t\t}\n\t\tif(!this.movingLeft && !this.movingRight){\n\t\t\tif(this.xVel > 0){\n\t\t\t\tthis.xVel -= .3;\n\t\t\t}else if(this.xVel < 0){\n\t\t\t\tthis.xVel += .3;\n\t\t\t}\n\t\t}\n\t}\n\n\tmove2(){\n\t\t// cur plat vs none\n\t\tif(!this.alive){\n\t\t\tthis.applyGravity();\n\t\t\tthis.yPos += this.yVel;\n\t\t}\n\t\tthis.getCurrentPlatform();\n\t\tif(this.isInAir()){\n\t\t\tthis.applyGravity();\n\t\t\tthis.yPos += this.yVel;\n\t\t\tthis.xPos += this.Xvel;\n\t\t}\n\t\tif(this.isOnFloor()){\n\t\t\t// do i need to add a jumped flag?\n\t\t\tthis.yVel = 0;\n\t\t\tthis.xPos += this.xVel;\n\t\t}\n\n\n\n\t}\n\n\tisPlayerOnSide(){\n\t\tif ((this.xPos >= 800 && this.xVel >= 0) || (this.xPos <= 300 && this.xVel <= 0)) {\n\t\t\tnull;\n\t\t} else {\n\t\t\tthis.xPos += this.xVel;\n\t\t}\n\t}\n\n\t// --------------------------------------------------------------------------------------------------\n\t// ----------------------BASIC UTIL---------------------------------------------------------------\n\t// ----------------------BASIC UTIL---------------------------------------------------------------\n\t// ----------------------BASIC UTIL---------------------------------------------------------------\n\t// ----------------------BASIC UTIL---------------------------------------------------------------\n\t// ----------------------BASIC UTIL---------------------------------------------------------------\n\t// ----------------------BASIC UTIL---------------------------------------------------------------\n\tapplyGravity(){\n\t\tthis.yVel += this.CONSTANTS.GRAVITY;\n\t}\n\n\tisInAir(){\n\t\tif(!this.curPlat){\n\t\t\treturn true;\n\t\t}\n\t\tif(this.yPos < (this.curPlat.yStart - this.height)){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tisOnFloor(){\n\t\tif(!this.curPlat){\n\t\t\treturn false;\n\t\t}\n\t\tif(this.yPos > (this.curPlat.yStart - this.curPlat.height)){\n\t\t\tif(this.yPos < (this.curPlat.yStart + 5)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --------------------------------------------------------------------------------------------------\n\t// ----------------------COLLISION LOGIC---------------------------------------------------------------\n\t// ----------------------COLLISION LOGIC---------------------------------------------------------------\n\t// ----------------------COLLISION LOGIC---------------------------------------------------------------\n\t// ----------------------COLLISION LOGIC---------------------------------------------------------------\n\t// ----------------------COLLISION LOGIC---------------------------------------------------------------\n\t// ----------------------COLLISION LOGIC---------------------------------------------------------------\n\n\tcollidedWithFloor() {\n\t\t\n\t\tif (this.curPlat) {\n\t\t\tif (this.yPos >= this.curPlat.yStart - 10) {\n\t\t\t\tthis.onFloor = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCurrentPlatform() {\n\t\t// \n\t\tlet that = this;\n\t\tfor (let i = 0; i < this.environment.platforms.length; i++) {\n\t\t\tlet plat = that.environment.platforms[i];\n\t\t\tif (that.xPos > plat.xStart && that.xPos < plat.xStart + plat.width && that.yPos < plat.yStart + plat.height) {\n\t\t\t\t\n\t\t\t\tthat.curPlat = plat;\n\t\t\t\tthat.lastPlat = that.curPlat;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthat.curPlat = null;\n\t\t\t\t// that.onFloor = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t// ----------------------------------------------------------------------------------------------------\n\t// -------------------------MOVEMENT BINDS--------------------------------------------------------------------------\n\t// -------------------------MOVEMENT BINDS---------------------------------------------------------------------------\n\t// -------------------------MOVEMENT BINDS---------------------------------------------------------------------------\n\t// -------------------------MOVEMENT BINDS-------------------------------------------------------------\n\t// -------------------------MOVEMENT BINDS---------------------------------------------------------------------------\n\t// -------------------------MOVEMENT BINDS---------------------------------------------------------------------------\n\n\tbindLeft() {\n\t\twindow.addEventListener('keypress', (e) => {\n\t\t\tif (e.key === 'a') {\n\t\t\t\tthis.moveLeft();\n\t\t\t\tthis.movingLeft = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tbindUndoLeft(){\n\t\twindow.addEventListener('keyup', (e) => {\n\t\t\tif (e.key === 'a') {\n\t\t\t\t// this.moveLeft();\n\t\t\t\tthis.movingLeft = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tbindRight(){\n\t\twindow.addEventListener('keypress', (e) => {\n\t\t\tif (e.key === 'd') {\n\t\t\t\tthis.moveRight();\n\t\t\t\tthis.movingRight = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tbindUndoRight(){\n\t\twindow.addEventListener('keyup', (e) => {\n\t\t\tif (e.key === 'd') {\n\t\t\t\t// this.moveRight();\n\t\t\t\tthis.movingRight = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tbindJump() {\n\t\twindow.addEventListener('keypress', (e) => {\n\t\t\tif (e.key === 'w') {\n\t\t\t\tthis.jump();\n\t\t\t}\n\t\t});\n\t}\n\n\tbindDown(){\n\t\twindow.addEventListener('keypress', (e) => {\n\t\t\tif(e.key === 's'){\n\t\t\t\tthis.goingDown = true;\n\t\t\t\tthis.down();\n\t\t\t}\n\t\t});\n\t}\n\n\tbindUndoDown(){\n\t\twindow.addEventListener('keyup', (e) => {\n\t\t\tif (e.key === 's') {\n\t\t\t\t// this.down();\n\t\t\t\tthis.goingDown = false;\n\t\t\t}\n\t\t});\n\t}\n\n// ----------------------------------------------------------------------------------------------------\n// -------------------------PROJECTILE BIND AND CONFIG--------------------------------------------------------------------------\n// -------------------------PROJECTILE BIND AND CONFIG---------------------------------------------------------------------------\n// -------------------------PROJECTILE BIND AND CONFIG---------------------------------------------------------------------------\n// -------------------------PROJECTILE BIND AND CONFIG-------------------------------------------------------------\n// -------------------------PROJECTILE BIND AND CONFIG---------------------------------------------------------------------------\n// -------------------------PROJECTILE BIND AND CONFIG---------------------------------------------------------------------------\n\n\n\tsetClick(that) {\n\t\tthis.context.canvas.addEventListener('click', (e) => {\n\t\t\tlet rect = this.context.canvas.getBoundingClientRect();\n\t\t\tlet pos = {};\n\t\t\tpos.x = e.clientX - rect.left;\n\t\t\tpos.y = e.clientY - rect.top;\n\t\n\t\t\tthat.projectiles.push(new Projectile(\n\t\t\t\tthat,\n\t\t\t\t...that.configureProjectile(pos)\n\t\t\t));\n\n\t\t\tthis.projectileCount += 1;\n\t\t});\n\t}\n\n\tconfigureProjectile(pos){\n\t\tlet xDelta = pos.x - this.xPos;\n\t\tlet yDelta = pos.y - this.yPos;\n\n\t\tlet squaredDeltaX = Math.pow(xDelta, 2);\n\t\tlet squaredDeltaY = Math.pow(yDelta, 2);\n\t\tlet totalDeltasquared = squaredDeltaX + squaredDeltaY;\n\t\tlet totalDelta = Math.sqrt(totalDeltasquared);\n\n\t\tlet proportion = 20 / totalDelta;\n\t\tlet xVel = xDelta * proportion;\n\t\tlet yVel = yDelta * proportion;\n\n\t\treturn [xVel, yVel];\n\t}\n\t// ----------------------------------------------------------------------------------------------------\n\t// -------------------------MOVEMENT--------------------------------------------------------------------------\n\t// -------------------------MOVEMENT---------------------------------------------------------------------------\n\t// -------------------------MOVEMENT---------------------------------------------------------------------------\n\t// -------------------------MOVEMENT-------------------------------------------------------------\n\t// -------------------------MOVEMENT---------------------------------------------------------------------------\n\t// -------------------------MOVEMENT---------------------------------------------------------------------------\n\n\tjump(){\n\t\tif(this.curJumps < 2){\n\t\t\tthis.onFloor = false;\n\t\t\tthis.jumping = true;\n\t\t\tthis.yVel = -12;\n\t\t\tthis.curJumps += 1;\n\t\t}\n\t}\n\n\tmoveRight(){\n\t\tthis.xVel = 5;\n\t}\n\n\tmoveLeft() {\n\t\tthis.xVel = -5;\n\t}\n\n\tdown(){\n\t\tif(this.goingDown === true){\n\t\t\tthis.yVel += 3;\n\t\t}\n\t}\n\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t\n\tcollide(obj1, obj2) {\n\t\t// let obj1TopLeft = {x : obj1.xPos, y: obj1.yPos};\n\t\t// let obj1TopRight = { x: obj1.xPos + obj1.width, y: obj1.yPos };\n\t\t// let obj1BotLeft = { x: obj1.xPos, y: obj1.yPos + obj1.height };\n\t\t// let obj1BotRight = { x : obj1.xPos + obj1.width, y : obj1.yPos + obj1.height};\n\n\t\tlet obj1CenterX = obj1.xPos + (obj1.xPos.width / 2);\n\t\tlet obj1CenterY = obj1.yPos + (obj1.yPos.width / 2);\n\n\n\t\tlet obj1Diag = Math.sqrt(Math.pow(obj1.width / 2, 2) + Math.pow(obj1.height / 2, 2)) / 2;\n\n\t\t// let obj2TopLeft = {x : obj2.xPos, y : obj2.yPos};\n\t\t// let obj2TopRight = { x: obj2.xPos + obj2.width, y: obj2.yPos };\n\t\t// let obj2BotLeft = { x: obj2.xPos, y: obj2.yPos + obj2.height };\n\t\t// let obj2BotRight = {x : obj2.xPos + obj2.width, y : obj2.yPos + obj2.height};\n\n\t\tlet obj2Diag = Math.sqrt(Math.pow(obj2.width / 2, 2) + Math.pow(obj2.height / 2, 2)) / 2;\n\t\tlet obj2CenterX = obj2.xPos + (obj2.xPos.width / 2);\n\t\tlet obj2CenterY = obj2.yPos + (obj2.yPos.width / 2);\n\n\t\tlet totalDelta = Math.sqrt(Math.pow(obj1.xPos - obj2.xPos, 2) + Math.pow(obj1.yPos - obj2.yPos, 2));\n\n\t\t// let totalDelta = Math.sqrt(Math.pow(obj1CenterX - obj2CenterX))\n\n\t\t// if((obj1TopLeft.x < obj2BotRight.x && obj1TopLeft.y < obj2BotRight.y) &&\n\t\t//   (obj1Diag + obj2Diag > totalDelta)){\n\t\t//   return true;\n\t\t// } else if (obj1TopRight.x > obj2BotLeft.x && obj1TopRight.y > obj2BotLeft.y && (obj1Diag + obj2Diag > totalDelta)){\n\t\t//   return true;\n\t\t// } else if (obj1BotRight.x > obj2TopLeft.x && obj1BotRight.y > obj2TopLeft.y && (obj1Diag + obj2Diag > totalDelta)){\n\t\t//   return true;\n\t\t// } else if (obj1BotLeft.x < obj2TopRight.x && obj1BotLeft.y > obj2TopRight.y && (obj1Diag + obj2Diag > totalDelta)){\n\t\t//   return true;\n\t\t// }else{\n\t\t//   return false;\n\t\t// }\n\n\t\t\n\t\tif (obj1Diag + obj2Diag + 10 > totalDelta) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tcollidedWithProjectiles() {\n\t\tlet that = this;\n\t\tObject.values(this.computerProjectiles).forEach((p) => {\n\t\t\tif (that.collide(that, p)) {\n\t\t\t\tp.didHit = true;\n\t\t\t\tconsole.log('hit!');\n\t\t\t\tthat.alive = false;\n\t\t\t}\n\t\t});\n\t}\n\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\n}","\n\nexport default class Background{\n  constructor(dimensions, round=0){\n    this.dimensions = dimensions;\n    this.round = round;\n  }\n\n  draw(context){\n    context.fillStyle = '#5eaec4';\n    context.fillRect(0, 0, this.dimensions.width, this.dimensions.height);\n  }\n\n  animate(context){\n    this.draw(context);\n  }\n}","import Projectile from \"./projectile\";\n\nexport default class Computer{\n  constructor(environment, context, human, xPos=850){\n    this.type = 'computer';\n\n\t\tthis.CONSTANTS = {\n      GRAVITY: 0.5,\n      JETPACK: 0.5\n    };\n\n    this.alive = true;\n\t\tthis.environment = environment;\n    this.context = context;\n    this.projectiles = {};\n    this.humanProjectiles = human.projectiles;\n\n    this.additionalScore = 0;\n\n    this.projectileCount = 10000;\n    this.projectilesToDelete = [];\n\n\t\tthis.xPos = xPos;\n    this.yPos = 50;\n\t\tthis.yVel = 0;\n\t\tthis.xVel = -5;\n\t\tthis.width = 30;\n    this.height = 30;\n    \n    this.human = human;\n\n    this.canShoot = false;\n    this.initiateShot();\n\n\t}\n\n  // ------------------------------------------------------------\n\n  initiateShot(){\n    window.setInterval(() => {\n      this.shoot();\n    }, 2000);\n  }\n\n  switchDirection(){\n    if(this.xPos <= 20){\n      this.xVel = 5;\n    }else if(this.xPos >= 1080){\n      this.xVel = -5;\n    }\n  }\n\n  fetchHumanPosition(){\n    this.playerPosX = this.human.xPos;\n    this.playerPosY = this.human.yPos;\n  }\n\n  shoot(){\n    let pos = {};\n    pos.x = this.playerPosX;\n    pos.y = this.playerPosY;\n\n    let newProj;\n    \n    let randNum = Math.round(Math.random() * 10);\n    if(randNum >= 9){\n      newProj = (\n        new Projectile(\n          this,\n          ...this.configureProjectile(pos)\n          // true\n        )\n      );\n    }else{\n      newProj = (\n        new Projectile(\n          this,\n          ...this.configureProjectile(pos)\n        )\n      );\n    }\n        \n    this.projectiles[newProj.id] = newProj;\n    this.projectileCount += 1;\n  }\n\n\tconfigureProjectile(pos, homing=false){\n    let randNum = Math.random();\n    \n    let xDelta = pos.x - this.xPos;\n    let yDelta = pos.y - this.yPos;\n\n    if(homing === false){\n      let randOffset = Math.round(Math.random() * 200);\n      if(randNum < 0.25){\n        xDelta += randOffset;\n      }else if(randNum > 0.25 && randNum < 0.5){\n        xDelta -= randOffset;\n      }\n    }\n\n    let squaredDeltaX = Math.pow(xDelta, 2);\n    let squaredDeltaY = Math.pow(yDelta, 2);\n    let totalDeltasquared = squaredDeltaX + squaredDeltaY;\n    let totalDelta = Math.sqrt(totalDeltasquared);\n\n    let proportion = 5 / totalDelta;\n    let xVel = xDelta * proportion;\n    let yVel = yDelta * proportion;\n\n    return [xVel, yVel];\n  }\n\n\n  // ------------------------------------------------------------\n\n  jump(){\n    this.yVel -= 5;\n  }\n\n  moveRight(){\n    this.xVel += 2;\n    if(this.xVel > 5){\n      this.xVel = 5;\n    }\n  }\n\n  moveLeft() {\n    this.xVel -= 2;\n    if (this.xVel < -5) {\n      this.xVel = -5;\n    }\n\t}\n  // ------------------------------------------------------------\n\n\tdraw(context){\n    context.fillStyle = 'red';\n    context.fillRect(\n      this.xPos, this.yPos, this.width, this.height\n    );\n  }\n\n  action(){\n    this.move();\n    this.fetchHumanPosition();\n    if(this.alive){\n      this.switchDirection();\n      this.collidedWithProjectiles();\n    }\n  }\n\n  move(){\n    if(!this.alive){\n      this.yVel += this.CONSTANTS.GRAVITY;\n      this.yPos += this.yVel;\n    }else{\n      this.yPos += this.yVel;\n      this.xPos += this.xVel;\n      if(this.collidedWithFloor() !== true){\n        this.yVel += this.CONSTANTS.GRAVITY;\n        this.yVel -= this.CONSTANTS.JETPACK;\n      }\n      if(this.xVel > 0 && this.collidedWithFloor()){\n        this.xVel -= 0.1;\n      } else if (this.xVel < 0 && this.collidedWithFloor()){\n        this.xVel += 0.1;\n      }\n    }\n    if(this.human.xPos >= 800){\n      if(this.xVel <= 0){\n        this.xPos -= 1;\n      }\n    }else if(this.human.xPos <= 300){\n      if (this.human.xPos <= 300){\n        this.xPos += 1;\n      }\n    }\n  }\n  // ------------------------------------------------------------\n  animate(context){\n    this.action();\n    this.draw(context);\n    if(Object.values(this.projectiles).length > 0){\n      Object.values(this.projectiles).forEach((p) => {\n        if(p.homing === true){\n          let pos = {x: this.human.xPos, y: this.human.yPos};\n          p.animate(context, ...this.configureProjectile(pos, true));\n        }else{\n          p.animate(context);\n        }\n      });\n    }\n    // this.projectiles = this.projectiles.filter(p => p.xPos < 1110 && p.xPos > -10 && p.yPos > -10 && p.yPos < 410);\n    Object.values(this.projectiles).forEach((p) => {\n      if (!(p => p.xPos < 1110 && p.xPos > -10 && p.yPos > -10 && p.yPos < 710)){\n        delete this.projectiles[p.id];\n      }\n    });\n  }\n  // ------------------------------------------------------------\n  collidedWithFloor(){\n    if(this.yPos >= this.environment.height - 13){\n      this.yVel = 0;\n      return true;\n    }\n  }\n\n  collide(obj1, obj2){\n    // let obj1TopLeft = {x : obj1.xPos, y: obj1.yPos};\n    // let obj1TopRight = { x: obj1.xPos + obj1.width, y: obj1.yPos };\n    // let obj1BotLeft = { x: obj1.xPos, y: obj1.yPos + obj1.height };\n    // let obj1BotRight = { x : obj1.xPos + obj1.width, y : obj1.yPos + obj1.height};\n\n    let obj1Diag = Math.sqrt(Math.pow(obj1.width / 2, 2) + Math.pow(obj1.height / 2, 2)) / 2;\n\n    // let obj2TopLeft = {x : obj2.xPos, y : obj2.yPos};\n    // let obj2TopRight = { x: obj2.xPos + obj2.width, y: obj2.yPos };\n    // let obj2BotLeft = { x: obj2.xPos, y: obj2.yPos + obj2.height };\n    // let obj2BotRight = {x : obj2.xPos + obj2.width, y : obj2.yPos + obj2.height};\n\n    let obj2Diag = Math.sqrt(Math.pow(obj2.width / 2, 2) + Math.pow(obj2.height / 2, 2)) / 2;\n\n    let totalDelta = Math.sqrt(Math.pow(obj1.xPos - obj2.xPos, 2) + Math.pow(obj1.yPos - obj2.yPos, 2));\n    \n    // if((obj1TopLeft.x < obj2BotRight.x && obj1TopLeft.y < obj2BotRight.y) &&\n    //   (obj1Diag + obj2Diag > totalDelta)){\n    //   return true;\n    // } else if (obj1TopRight.x > obj2BotLeft.x && obj1TopRight.y > obj2BotLeft.y && (obj1Diag + obj2Diag > totalDelta)){\n    //   return true;\n    // } else if (obj1BotRight.x > obj2TopLeft.x && obj1BotRight.y > obj2TopLeft.y && (obj1Diag + obj2Diag > totalDelta)){\n    //   return true;\n    // } else if (obj1BotLeft.x < obj2TopRight.x && obj1BotLeft.y > obj2TopRight.y && (obj1Diag + obj2Diag > totalDelta)){\n    //   return true;\n    // }else{\n    //   return false;\n    // }\n    \n    \n    if(obj1Diag + obj2Diag + 10 > totalDelta){\n      return true;\n    }else{\n      return false;\n    }\n\n  }\n\n  collidedWithProjectiles(){\n    this.human.projectiles.forEach((hp) => {\n      if(this.collide(this, hp)){\n        this.projectilesToDelete.push(hp);\n        console.log('hit!');\n        hp.didHit = true;\n        this.alive = false;\n        this.additionalScore += 1;\n        return true;\n      }\n    });\n  }\n\n\n}","\n\nexport default class Score{\n  constructor(context, initScore=0){\n    this.xPos = 1050;\n    this.yPos = 100;\n    this.score = initScore;\n\n    this.context = context;\n  }\n\n  animate(){\n    this.draw();\n  }\n\n  draw(){\n    this.context.font = \"20px Arial\";\n    this.context.fillText(this.score, this.xPos, this.yPos);\n  }\n}","import \"./styles/index.scss\";\n\nimport Game from './game';\n\nconst canvas = document.getElementById('main-canvas');\nconst game = new Game(canvas);\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  game.restart();\n});\n\n\n","import Environment from \"./environment\";\nimport Human from './human';\nimport Background from \"./background\";\nimport Computer from \"./computer\";\nimport Score from \"./score\";\n\n\nexport default class Game{\n  constructor(canvas){\n    this.context = canvas.getContext('2d');\n    this.dimensions = {\n      height: canvas.height,\n      width: canvas.width\n    };\n    this.running = false;\n\n    this.computers = [];\n    this.computersBeingAdded = 0;\n    this.numComputers = this.computers.length + this.computersBeingAdded;\n\n    this.humanProjectiles = [];\n    this.computerProjectiles = [];\n\n\n  }\n\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n\n  filterComputers(){\n    this.computers = this.computers.filter(c => c.yPos < 715);\n  }\n\n  run(){\n    this.context.canvas.addEventListener('mousedown', () => {\n      this.click();\n    });\n  }\n\n  click(){\n    if(!this.running){\n      this.play();\n    }\n  }\n  \n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n\n  setNumComputers(){\n    this.numComputers = this.computers.length + this.computersBeingAdded;\n  }\n\n  spawnComputer(){\n    this.computersBeingAdded += 1;\n    let newCompStartX;\n    let randNum = Math.random();\n    if(randNum <= 0.5){\n      newCompStartX = 1150;\n    }else{\n      newCompStartX = -50;\n    }\n    window.setTimeout(() => {\n      this.computers.push(\n        new Computer(this.environment, this.context, this.human, newCompStartX)\n      );\n      this.computersBeingAdded -= 1;\n    }, 5000);\n  }\n\n  setPlayerTracking(){\n    this.computers.forEach((comp) => {\n      Object.values(comp.projectiles).forEach((proj) => {\n        proj.playerXVel = this.human.xVel;\n        proj.playerXPos = this.human.xPos;\n        proj.playerYPos = this.human.yPos;\n      });\n    });\n  }\n\n  sendEnemyProjectiles(){\n    this.computers.forEach((comp) => {\n      Object.values(comp.projectiles).forEach((projectile) => {\n        this.human.computerProjectiles[projectile.id] = projectile;\n      });\n    });\n  }\n\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n\n  addEnemyScore(){\n    let that = this;\n    this.computers.forEach((comp) => {\n      that.score.score += comp.additionalScore;\n      comp.additionalScore = 0;\n    });\n  }\n\n  step(){\n    this.animate();\n    this.addEnemyScore();\n  }\n\n\n  animate(){\n\n    this.filterComputers();\n    this.sendEnemyProjectiles();\n\n    this.background.animate(this.context);\n    this.environment.animate(this.context);\n    this.human.animate(this.context);\n    this.score.animate();\n\n    this.setPlayerTracking();\n\n    this.computers.forEach((c) => {\n      c.animate(this.context);\n    });\n\n    this.setNumComputers();\n\n    if(this.numComputers < 6){\n      this.spawnComputer();\n    }\n\n    if(this.running){\n      window.requestAnimationFrame(this.step.bind(this));\n    }\n  }\n\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n// --------------------------------------------------------------------------\n\n  play(){\n    this.running = true;\n    this.filterComputers();\n    // this.animate();\n    this.step();\n  }\n\n  restart(){\n    this.background = new Background(this.dimensions);\n    this.environment = new Environment(this.dimensions, this.context);\n    this.human = new Human(this.environment, this.context, this.computerProjectiles);\n    this.score = new Score(this.context);\n    this.environment.human = this.human;\n    let i = 1;\n    let compStartX;\n    while(i < 6){\n      if(i % 2 === 0){\n        compStartX = 1150 + (100 * i);\n      }else{\n        compStartX = -50 - (100 * i);\n      }\n      this.computers.push(new Computer(this.environment, this.context, this.human, compStartX));\n      i += 1;\n    }\n    this.running = false;\n    this.step();\n    this.run();\n  }\n\n}"],"sourceRoot":""}