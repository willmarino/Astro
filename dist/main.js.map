{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/platform.js","webpack:///./src/environment.js","webpack:///./src/projectile.js","webpack:///./src/human.js","webpack:///./src/background.js","webpack:///./src/computer.js","webpack:///./src/index.js","webpack:///./src/game.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Platform","xStart","yStart","width","height","this","context","fillStyle","fillRect","x","y","Environment","dimensions","human","platforms","generatePlatforms","push","length","prevPlat","generatePlatformGap","generatePlatformYStart","generatePlatformWidth","randHeight","prevPlatHeight","randomOffset","Math","round","random","draw","action","move","that","xPos","xVel","forEach","plat","shift","pop","newPlatWidth","nextPlat","unshift","Projectile","id","playerPos","yVel","yPos","Human","environment","computerProjectiles","CONSTANTS","GRAVITY","alive","projectiles","jumping","projectileCount","projectilesToDelete","onFloor","curPlat","lastPlat","bindLeft","bindRight","bindJump","setClick","animate","filter","getCurrentPlatform","window","addEventListener","e","moveLeft","moveRight","jump","canvas","rect","getBoundingClientRect","pos","clientX","left","clientY","top","configureProjectile","xDelta","yDelta","totalDeltasquared","pow","proportion","sqrt","obj1","obj2","computer","collide","console","log","Background","Computer","JETPACK","humanProjectiles","canShoot","initiateShot","setInterval","shoot","playerPosX","playerPosY","newProj","fetchHumanPosition","switchDirection","collidedWithProjectiles","collidedWithFloor","values","hp","game","getContext","running","computers","computersBeingAdded","numComputers","click","play","newCompStartX","randNum","setTimeout","filterComputers","background","setNumComputers","spawnComputer","requestAnimationFrame","compStartX","run","document","getElementById","restart"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\n\nexport default class Platform{\n  constructor(xStart, yStart, width, height){\n    this.xStart = xStart;\n    this.yStart = yStart;\n    this.width = width;\n    this.height = height;\n  }\n\n  draw(context) {\n    context.fillStyle = 'black';\n    context.fillRect(this.xStart, this.yStart, this.width, this.height);\n  }\n\n  move(x, y){\n    this.xStart += x;\n    this.yStart += y;\n  }\n\n}","import Platform from \"./platform\";\n\nexport default class Environment{\n  constructor(dimensions, context, human=null){\n    this.dimensions = {\n      height: dimensions.height,\n      width: dimensions.width\n    };\n    this.context = context;\n\n    this.height = 300;\n\n    this.platforms = [];\n    this.generatePlatforms();\n\n    this.human = human;\n  }\n\n  generatePlatforms(){\n    this.platforms.push(\n      new Platform(-360, 400, 300, 15)\n    );\n    while(\n      this.platforms[this.platforms.length - 1].xStart +\n      this.platforms[this.platforms.length - 1].width < 2000){\n        let prevPlat = this.platforms[this.platforms.length - 1];\n        this.platforms.push(\n          new Platform(\n            prevPlat.xStart + prevPlat.width + this.generatePlatformGap(),\n            this.generatePlatformYStart(),\n            this.generatePlatformWidth(),\n            15\n          ));\n      }\n  }\n\n  generatePlatformYStart(){\n    if(this.platforms.length === 0){\n      return 250;\n    }else{\n      let prevPlatHeight = this.platforms[this.platforms.length - 1].yStart;\n      let randomOffset = Math.round(Math.random() * 200);\n      let randHeight;\n      if(Math.random() < .5){\n        randHeight = prevPlatHeight + randomOffset;\n      }else{\n        randHeight = prevPlatHeight - randomOffset;\n      }\n      if(randHeight < 250){\n        randHeight = 250;\n      }else if(randHeight > 475){\n        randHeight = 475;\n      }\n      return randHeight;\n    }\n  }\n\n  generatePlatformWidth(){\n    let randomOffset = Math.round(Math.random() * 200);\n    // let randomNegOffset = Math.round(Math.random() * (200 * (-1)));\n    let randNum = Math.random();\n    if(randNum < .5){\n      return 300 + randomOffset;\n    }else{\n      return 300 - randomOffset;\n    }\n  }\n\n  generatePlatformGap(){\n    return Math.round(Math.random() * 30) + 15;\n  }\n\n  // --------------------------------------------------------------------------\n  // --------------------------------------------------------------------------\n  // --------------------------------------------------------------------------\n  // --------------------------------------------------------------------------\n  // --------------------------------------------------------------------------\n  // --------------------------------------------------------------------------\n\n  animate(context){\n    this.draw(context);\n    this.action();\n  }\n\n  action(){\n    this.move();\n  }\n\n  move(){\n    let that = this;\n    if(this.human.xPos >= 900 && this.human.xVel > 0){\n      this.platforms.forEach((plat) => {\n        plat.move(that.human.xVel * (-1) - .1, 0);\n      });\n    }else if(this.human.xPos <= 200 && this.human.xVel < 0){\n      this.platforms.forEach((plat) => {\n        plat.move(this.human.xVel * (-1) + .1, 0);\n      });\n    }\n    if(this.platforms[0].xStart < -450){\n      this.platforms.shift();\n      let prevPlat = this.platforms[this.platforms.length - 1];\n      this.platforms.push(\n        new Platform(\n          prevPlat.xStart + prevPlat.width + this.generatePlatformGap(),\n          this.generatePlatformYStart(),\n          this.generatePlatformWidth(),\n          15\n        ));\n    }else if(this.platforms[this.platforms.length - 1].xStart > 1300){\n      this.platforms.pop();\n      let newPlatWidth = this.generatePlatformWidth();\n      let nextPlat = this.platforms[0];\n      this.platforms.unshift(\n        new Platform(\n          nextPlat.xStart - this.generatePlatformGap() - newPlatWidth,\n          this.generatePlatformYStart(),\n          newPlatWidth,\n          15\n        ));\n    }\n  }\n\n  draw(context){\n    this.platforms.forEach((p) => {\n      p.draw(context);\n    });\n    \n    \n\n  }\n\n}","\n\nexport default class Projectile{\n  constructor(id, playerPos, context, xVel, yVel){\n    this.context = context;\n\n    this.xPos = playerPos.xPos;\n    this.yPos = playerPos.yPos;\n    this.yVel = yVel;\n    this.xVel = xVel;\n\n    this.width = 5;\n    this.height = 5;\n\n    this.id = id;\n  }\n  \n  animate(context){\n    this.move();\n    this.draw(context);\n  }\n  \n  move(){\n    this.xPos += this.xVel;\n    this.yPos += this.yVel;\n  }\n\n\n  draw(context){\n    context.fillStyle = 'white';\n    context.fillRect(this.xPos, this.yPos, this.width, this.height);\n  }\n\n}","import Projectile from \"./projectile\";\n\nexport default class Human{\n\tconstructor(environment, context, computerProjectiles){\n\n\t\tthis.CONSTANTS = {\n      GRAVITY: 0.5\n\t\t};\n\n\t\tthis.alive = true;\n\t\tthis.environment = environment;\n\t\tthis.context = context;\n\t\tthis.computerProjectiles = computerProjectiles;\n\t\tthis.projectiles = [];\n\t\tthis.jumping = false;\n\t\tthis.projectileCount = 0;\n\n\t\tthis.projectilesToDelete = [];\n\n    this.xPos = 350;\n    this.yPos = 100;\n    this.yVel = 0;\n    this.xVel = 0;\n    this.width = 10;\n\t\tthis.height = 10;\n\t\t\n\t\tthis.onFloor = false;\n\t\tthis.curPlat = null;\n\t\tthis.lastPlat = this.environment.platforms[0];\n\n\t\tthis.bindLeft();\n\t\tthis.bindRight();\n    this.bindJump();\n    this.setClick = this.setClick.bind(this);\n    this.setClick(this);\n\t}\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\tanimate(context) {\n\t\tthis.move();\n\t\tthis.draw(context);\n\t\tif (this.projectiles.length > 0) {\n\t\t\tthis.projectiles.forEach((p) => {\n\t\t\t\tp.animate(context);\n\t\t\t});\n\t\t}\n\t\tthis.projectiles = this.projectiles.filter(p => p.xPos < 1110 && p.xPos > -10 && p.yPos > -10 && p.yPos < 410);\n\t}\n\n\tdraw(context) {\n\t\tcontext.fillStyle = 'gray';\n\t\tcontext.fillRect(\n\t\t\tthis.xPos, this.yPos, this.width, this.height\n\t\t);\n\t}\n\n\tmove(){\n\t\t// set jumping to false if velocity is positive(going down) and you are in air\n\t\tthis.getCurrentPlatform();\n\t\tif(this.curPlat){\n\t\t\t\n\t\t\tif(this.yVel > 0 && this.yPos < (this.curPlat.yStart - 20 || this.lastPlat.yStart) ){ //if we have a downward velocity and were above platform\n\t\t\t\tthis.jumping = false;\n\t\t\t}\n\t\t}else if(!this.curPlat){\n\t\t\tthis.onFloor = false;\n\t\t}\n\t\tthis.getCurrentPlatform();\n\t\tif(this.onFloor && !this.jumping){ // on floor and not jumping\n\t\t\tthis.yPos = this.curPlat.yStart - this.height;\n\t\t\tthis.yVel = 0;\n\t\t\t// \n\t\t\tif ((this.xPos >= 900 && this.xVel >= 0) || (this.xPos <= 200 && this.xVel <= 0)) {\n\t\t\t\tnull;\n\t\t\t} else {\n\t\t\t\tthis.xPos += this.xVel;\n\t\t\t}\n\t\t\t// \n\t\t}else if(!this.onFloor){ //in mid air\n\t\t\tif(this.curPlat){\n\t\t\t\t\n\n\n\t\t\t\tif(this.yPos >= this.curPlat.yStart - this.height && this.yVel >= 0){\n\t\t\t\t\tthis.onFloor = true;\n\t\t\t\t\t// \n\t\t\t\t\tif ((this.xPos >= 900 && this.xVel >= 0) || (this.xPos <= 200 && this.xVel <= 0)) {\n\t\t\t\t\t\tnull;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.xPos += this.xVel;\n\t\t\t\t\t}\n\t\t\t\t\t// \n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// }else if((this.yPos < this.curPlat.yStart + this.curPlat.height + 10) && (this.yPos > this.curPlat.ystart + 5 )){\n\t\t\t\t// \tif ((this.xPos >= 900 && this.xVel >= 0) || (this.xPos <= 200 && this.xVel <= 0)) {\n\t\t\t\t// \t\tnull;\n\t\t\t\t// \t} else {\n\t\t\t\t// \t\tthis.xPos += this.xVel;\n\t\t\t\t// \t}\n\t\t\t\t// \tthis.yPos = this.curPlat.ystart + this.curPlat.height;\n\t\t\t\t// \tthis.yVel = 0;\n\t\t\t\t// \tthis.yVel += this.CONSTANTS.GRAVITY;\n\t\t\t\t// \tthis.yPos += this.yVel;\n\t\t\t\t// \treturn;\n\n\n\n\n\t\t\t\t\n\t\t\t}\n\t\t\tthis.yVel += this.CONSTANTS.GRAVITY;\n\t\t\tthis.yPos += this.yVel;\n\t\t\t// \n\t\t\tif ((this.xPos >= 900 && this.xVel >= 0) || (this.xPos <= 200 && this.xVel <= 0)) {\n\t\t\t\tnull;\n\t\t\t} else {\n\t\t\t\tthis.xPos += this.xVel;\n\t\t\t}\n\t\t\t// \n\t\t}else if(this.onFloor && this.jumping){ // on floor but jumping\t\n\t\t\tthis.yPos += this.yVel;\n\t\t\t// \n\t\t\tif ((this.xPos >= 900 && this.xVel >= 0) || (this.xPos <= 200 && this.xVel <= 0)) {\n\t\t\t\tnull;\n\t\t\t} else {\n\t\t\t\tthis.xPos += this.xVel;\n\t\t\t}\n\t\t\t// \n\t\t}\n\t\tif(this.xVel > 0){\n\t\t\tthis.xVel -= .1;\n\t\t}else if(this.xVel < 0){\n\t\t\tthis.xVel += .1;\n\t\t}\n\t}\n\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\n\tcollidedWithFloor() {\n\t\t\n\t\tif (this.curPlat) {\n\t\t\tif (this.yPos >= this.curPlat.yStart - 10) {\n\t\t\t\tthis.onFloor = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCurrentPlatform() {\n\t\t// \n\t\tlet that = this;\n\t\tfor (let i = 0; i < this.environment.platforms.length; i++) {\n\t\t\tlet plat = that.environment.platforms[i];\n\t\t\tif (that.xPos > plat.xStart && that.xPos < plat.xStart + plat.width && that.yPos < plat.yStart + plat.height) {\n\t\t\t\t\n\t\t\t\tthat.curPlat = plat;\n\t\t\t\tthat.lastPlat = that.curPlat;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthat.curPlat = null;\n\t\t\t\t// that.onFloor = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\n\tbindRight() {\n\t\twindow.addEventListener('keypress', (e) => {\n\t\t\tif (e.key === 'a') {\n\t\t\t\tthis.moveLeft();\n\t\t\t}\n\t\t});\n\t}\n\n\tbindLeft(){\n\t\twindow.addEventListener('keypress', (e) => {\n\t\t\tif (e.key === 'd') {\n\t\t\t\tthis.moveRight();\n\t\t\t}\n\t\t});\n\t}\n\n\tbindJump() {\n\t\twindow.addEventListener('keypress', (e) => {\n\t\t\tif (e.key === 'w') {\n\t\t\t\tthis.jump();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetClick(that) {\n\t\tthis.context.canvas.addEventListener('click', (e) => {\n\t\t\tlet rect = this.context.canvas.getBoundingClientRect();\n\t\t\tlet pos = {};\n\t\t\tpos.x = e.clientX - rect.left;\n\t\t\tpos.y = e.clientY - rect.top;\n\t\n\t\t\t// \n\t\t\tthat.projectiles.push(new Projectile(\n\t\t\t\tthis.projectileCount,\n\t\t\t\t{ xPos: that.xPos, yPos: that.yPos}, \n\t\t\t\tthat.context,\n\t\t\t\t...that.configureProjectile(pos)\n\t\t\t\t)\n\t\t\t);\n\t\t\tthis.projectileCount += 1;\n\t\t});\n\t}\n\n\tconfigureProjectile(pos){\n\t\tlet xDelta = pos.x - this.xPos;\n\t\tlet yDelta = pos.y - this.yPos;\n\n\t\tlet squaredDeltaX = Math.pow(xDelta, 2);\n\t\tlet squaredDeltaY = Math.pow(yDelta, 2);\n\t\tlet totalDeltasquared = squaredDeltaX + squaredDeltaY;\n\t\tlet totalDelta = Math.sqrt(totalDeltasquared);\n\n\t\tlet proportion = 20 / totalDelta;\n\t\tlet xVel = xDelta * proportion;\n\t\tlet yVel = yDelta * proportion;\n\n\t\treturn [xVel, yVel];\n\t}\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\tjump(){\n\t\tthis.onFloor = false;\n\t\tthis.jumping = true;\n\t\tthis.yVel -= 10;\n\t}\n\n\tmoveRight(){\n\t\tif(this.xVel < 0){\n\t\t\tthis.xVel = 0;\n\t\t}\n\t\tthis.xVel += 4;\n\t\tif(this.xVel >= 5){\n\t\t\tthis.xVel = 5;\n\t\t}\n\t}\n\n\tmoveLeft() {\n\t\tif (this.xVel > 0) {\n\t\t\tthis.xVel = 0;\n\t\t}\n\t\tthis.xVel -= 4;\n\t\tif (this.xVel <= -5) {\n\t\t\tthis.xVel = -5;\n\t\t}\n\t}\n\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t\n\tcollide(obj1, obj2) {\n\t\t// let obj1TopLeft = {x : obj1.xPos, y: obj1.yPos};\n\t\t// let obj1TopRight = { x: obj1.xPos + obj1.width, y: obj1.yPos };\n\t\t// let obj1BotLeft = { x: obj1.xPos, y: obj1.yPos + obj1.height };\n\t\t// let obj1BotRight = { x : obj1.xPos + obj1.width, y : obj1.yPos + obj1.height};\n\n\t\tlet obj1Diag = Math.sqrt(Math.pow(obj1.width / 2, 2) + Math.pow(obj1.height / 2, 2)) / 2;\n\n\t\t// let obj2TopLeft = {x : obj2.xPos, y : obj2.yPos};\n\t\t// let obj2TopRight = { x: obj2.xPos + obj2.width, y: obj2.yPos };\n\t\t// let obj2BotLeft = { x: obj2.xPos, y: obj2.yPos + obj2.height };\n\t\t// let obj2BotRight = {x : obj2.xPos + obj2.width, y : obj2.yPos + obj2.height};\n\n\t\tlet obj2Diag = Math.sqrt(Math.pow(obj2.width / 2, 2) + Math.pow(obj2.height / 2, 2)) / 2;\n\n\t\tlet totalDelta = Math.sqrt(Math.pow(obj1.xPos - obj2.xPos, 2) + Math.pow(obj1.yPos - obj2.yPos, 2));\n\n\t\t// if((obj1TopLeft.x < obj2BotRight.x && obj1TopLeft.y < obj2BotRight.y) &&\n\t\t//   (obj1Diag + obj2Diag > totalDelta)){\n\t\t//   return true;\n\t\t// } else if (obj1TopRight.x > obj2BotLeft.x && obj1TopRight.y > obj2BotLeft.y && (obj1Diag + obj2Diag > totalDelta)){\n\t\t//   return true;\n\t\t// } else if (obj1BotRight.x > obj2TopLeft.x && obj1BotRight.y > obj2TopLeft.y && (obj1Diag + obj2Diag > totalDelta)){\n\t\t//   return true;\n\t\t// } else if (obj1BotLeft.x < obj2TopRight.x && obj1BotLeft.y > obj2TopRight.y && (obj1Diag + obj2Diag > totalDelta)){\n\t\t//   return true;\n\t\t// }else{\n\t\t//   return false;\n\t\t// }\n\t\tif (obj1Diag + obj2Diag > totalDelta) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tcollidedWithProjectiles() {\n\t\tthis.computer.projectiles.forEach((p) => {\n\t\t\tif (this.collide(this, p)) {\n\t\t\t\tthis.projectilesToDelete.push(p);\n\t\t\t\tconsole.log('hit!');\n\t\t\t\tthis.alive = false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\t// ----------------------------------------------------------------------------------------------------\n\n}","\n\nexport default class Background{\n  constructor(dimensions, round=0){\n    this.dimensions = dimensions;\n    this.round = round;\n  }\n\n  draw(context){\n    context.fillStyle = '#5eaec4';\n    context.fillRect(0, 0, this.dimensions.width, this.dimensions.height);\n  }\n\n  animate(context){\n    this.draw(context);\n  }\n}","import Projectile from \"./projectile\";\n\nexport default class Computer{\n  constructor(environment, context, human, xPos=850){\n\n\t\tthis.CONSTANTS = {\n      GRAVITY: 0.5,\n      JETPACK: 0.5\n    };\n\n    this.alive = true;\n\t\tthis.environment = environment;\n    this.context = context;\n    this.projectiles = {};\n    this.humanProjectiles = human.projectiles;\n\n    this.projectileCount = 10000;\n    this.projectilesToDelete = [];\n\n\t\tthis.xPos = xPos;\n    this.yPos = 50;\n\t\tthis.yVel = 0;\n\t\tthis.xVel = -5;\n\t\tthis.width = 20;\n    this.height = 20;\n    \n    this.human = human;\n\n    this.canShoot = false;\n    this.initiateShot();\n\n\t}\n\n  // ------------------------------------------------------------\n\n  initiateShot(){\n    window.setInterval(() => {\n      this.shoot();\n    }, 3000);\n  }\n\n  switchDirection(){\n    if(this.xPos <= 20){\n      this.xVel = 5;\n    }else if(this.xPos >= 1080){\n      this.xVel = -5;\n    }\n  }\n\n  fetchHumanPosition(){\n    this.playerPosX = this.human.xPos;\n    this.playerPosY = this.human.yPos;\n  }\n\n  shoot(){\n    let pos = {};\n    pos.x = this.playerPosX;\n    pos.y = this.playerPosY;\n    \n    \n    let newProj = (\n      new Projectile(\n        this.projectileCount,\n        { xPos: this.xPos, yPos: this.yPos },\n        this.context,\n        ...this.configureProjectile(pos)\n      )\n    );\n        \n    this.projectiles[newProj.id] = newProj;\n\n    this.projectileCount += 1;\n\n    // this.canShoot = false;\n  }\n\n\tconfigureProjectile(pos){\n    let xDelta = pos.x - this.xPos;\n    let yDelta = pos.y - this.yPos;\n\n    let squaredDeltaX = Math.pow(xDelta, 2);\n    let squaredDeltaY = Math.pow(yDelta, 2);\n    let totalDeltasquared = squaredDeltaX + squaredDeltaY;\n    let totalDelta = Math.sqrt(totalDeltasquared);\n\n    let proportion = 5 / totalDelta;\n    let xVel = xDelta * proportion;\n    let yVel = yDelta * proportion;\n\n    return [xVel, yVel];\n  }\n\n  deleteProjectiles(projectiles){\n\n  }\n\n\n  // ------------------------------------------------------------\n\n  jump(){\n    this.yVel -= 5;\n  }\n\n  moveRight(){\n    this.xVel += 2;\n    if(this.xVel > 5){\n      this.xVel = 5;\n    }\n  }\n\n  moveLeft() {\n    this.xVel -= 2;\n    if (this.xVel < -5) {\n      this.xVel = -5;\n    }\n\t}\n  // ------------------------------------------------------------\n\n\tdraw(context){\n    context.fillStyle = 'red';\n    context.fillRect(\n      this.xPos, this.yPos, this.width, this.height\n    );\n  }\n\n  action(){\n    this.move();\n    this.fetchHumanPosition();\n    if(this.alive){\n      this.switchDirection();\n      this.collidedWithProjectiles();\n    }\n  }\n\n  move(){\n    if(!this.alive){\n      this.yVel += this.CONSTANTS.GRAVITY;\n      this.yPos += this.yVel;\n    }else{\n      this.yPos += this.yVel;\n      this.xPos += this.xVel;\n      if(this.collidedWithFloor() !== true){\n        this.yVel += this.CONSTANTS.GRAVITY;\n        this.yVel -= this.CONSTANTS.JETPACK;\n      }\n      if(this.xVel > 0 && this.collidedWithFloor()){\n        this.xVel -= 0.1;\n      } else if (this.xVel < 0 && this.collidedWithFloor()){\n        this.xVel += 0.1;\n      }\n    }\n  }\n  // ------------------------------------------------------------\n  animate(context){\n    this.action();\n    this.draw(context);\n    if(Object.values(this.projectiles).length > 0){\n      Object.values(this.projectiles).forEach((p) => {\n        p.animate(context);\n      });\n    }\n    // this.projectiles = this.projectiles.filter(p => p.xPos < 1110 && p.xPos > -10 && p.yPos > -10 && p.yPos < 410);\n    Object.values(this.projectiles).forEach((p) => {\n      if (!(p => p.xPos < 1110 && p.xPos > -10 && p.yPos > -10 && p.yPos < 410)){\n        delete this.projectiles[p.id];\n      }\n    });\n  }\n  // ------------------------------------------------------------\n  collidedWithFloor(){\n    if(this.yPos >= this.environment.height - 13){\n      this.yVel = 0;\n      return true;\n    }\n  }\n\n  collide(obj1, obj2){\n    // let obj1TopLeft = {x : obj1.xPos, y: obj1.yPos};\n    // let obj1TopRight = { x: obj1.xPos + obj1.width, y: obj1.yPos };\n    // let obj1BotLeft = { x: obj1.xPos, y: obj1.yPos + obj1.height };\n    // let obj1BotRight = { x : obj1.xPos + obj1.width, y : obj1.yPos + obj1.height};\n\n    let obj1Diag = Math.sqrt(Math.pow(obj1.width / 2, 2) + Math.pow(obj1.height / 2, 2)) / 2;\n\n    // let obj2TopLeft = {x : obj2.xPos, y : obj2.yPos};\n    // let obj2TopRight = { x: obj2.xPos + obj2.width, y: obj2.yPos };\n    // let obj2BotLeft = { x: obj2.xPos, y: obj2.yPos + obj2.height };\n    // let obj2BotRight = {x : obj2.xPos + obj2.width, y : obj2.yPos + obj2.height};\n\n    let obj2Diag = Math.sqrt(Math.pow(obj2.width / 2, 2) + Math.pow(obj2.height / 2, 2)) / 2;\n\n    let totalDelta = Math.sqrt(Math.pow(obj1.xPos - obj2.xPos, 2) + Math.pow(obj1.yPos - obj2.yPos, 2));\n    \n    // if((obj1TopLeft.x < obj2BotRight.x && obj1TopLeft.y < obj2BotRight.y) &&\n    //   (obj1Diag + obj2Diag > totalDelta)){\n    //   return true;\n    // } else if (obj1TopRight.x > obj2BotLeft.x && obj1TopRight.y > obj2BotLeft.y && (obj1Diag + obj2Diag > totalDelta)){\n    //   return true;\n    // } else if (obj1BotRight.x > obj2TopLeft.x && obj1BotRight.y > obj2TopLeft.y && (obj1Diag + obj2Diag > totalDelta)){\n    //   return true;\n    // } else if (obj1BotLeft.x < obj2TopRight.x && obj1BotLeft.y > obj2TopRight.y && (obj1Diag + obj2Diag > totalDelta)){\n    //   return true;\n    // }else{\n    //   return false;\n    // }\n    if(obj1Diag + obj2Diag > totalDelta){\n      return true;\n    }else{\n      return false;\n    }\n\n  }\n\n  collidedWithProjectiles(){\n    this.human.projectiles.forEach((hp) => {\n      if(this.collide(this, hp)){\n        this.projectilesToDelete.push(hp);\n        console.log('hit!');\n        this.alive = false;\n        // this.shootingInterval.clearInterval();\n        return true;\n      }\n    });\n  }\n\n\n}","import \"./styles/index.scss\";\n\nimport Game from './game';\n\nconst canvas = document.getElementById('main-canvas');\nconst game = new Game(canvas);\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  game.restart();\n});\n\n\n","import Environment from \"./environment\";\nimport Human from './human';\nimport Background from \"./background\";\nimport Computer from \"./computer\";\n\n\nexport default class Game{\n  constructor(canvas){\n    this.context = canvas.getContext('2d');\n    this.dimensions = {\n      height: canvas.height,\n      width: canvas.width\n    };\n    this.running = false;\n\n    this.computers = [];\n    this.computersBeingAdded = 0;\n    this.numComputers = this.computers.length + this.computersBeingAdded;\n\n    this.humanProjectiles = [];\n    this.computerProjectiles = [];\n\n  }\n\n  filterComputers(){\n    this.computers = this.computers.filter(c => c.yPos < 515);\n  }\n\n  run(){\n    this.context.canvas.addEventListener('mousedown', () => {\n      console.log('akjsda');\n      this.click();\n    });\n  }\n\n  click(){\n    if(!this.running){\n      this.play();\n    }\n  }\n\n  setNumComputers(){\n    this.numComputers = this.computers.length + this.computersBeingAdded;\n  }\n\n  spawnComputer(){\n    this.computersBeingAdded += 1;\n    let newCompStartX;\n    let randNum = Math.random();\n    if(randNum <= .5){\n      newCompStartX = 1150\n    }else{\n      newCompStartX = -50\n    }\n    window.setTimeout(() => {\n      this.computers.push(\n        new Computer(this.environment, this.context, this.human, newCompStartX)\n      )\n      this.computersBeingAdded -= 1;\n    }, 10000);\n  }\n\n  animate(){\n\n    this.filterComputers();\n    this.background.animate(this.context);\n    this.environment.animate(this.context);\n    this.human.animate(this.context);\n    this.computers.forEach((c) => {\n      c.animate(this.context);\n    });\n    this.setNumComputers();\n    if(this.numComputers < 5){\n      this.spawnComputer();\n    }\n    // this.computer.()\n    if(this.running){\n      window.requestAnimationFrame(this.animate.bind(this));\n    }\n  }\n\n  play(){\n    this.running = true;\n    this.filterComputers();\n    this.animate();\n  }\n\n  restart(){\n    this.background = new Background(this.dimensions);\n    this.environment = new Environment(this.dimensions, this.context);\n    this.human = new Human(this.environment, this.context, this.computerProjectiles);\n    this.environment.human = this.human;\n    let i = 1;\n    let compStartX;\n    while(i < 6){\n      if(i % 2 === 0){\n        compStartX = 1150 + (100 * i);\n      }else{\n        compStartX = -50 - (100 * i);\n      }\n      this.computers.push(new Computer(this.environment, this.context, this.human, compStartX));\n      i += 1;\n    }\n    this.running = false;\n    this.animate();\n    this.run();\n  }\n\n}"],"sourceRoot":""}